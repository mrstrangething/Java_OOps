Q2. Create a class Point and Rectangle

a. Class Point

    It should have 2 data-members: x and y.
    Add a constructor with two parameters: x and y.
    Add a copy constructor.

b. Class Rectangle

    It should have 2 data-members:
        topLeft (Point)
        bottomRight (Point) 

    Add a constructor with 4 parameters of type int: topLeftX, topLeftY, bottomRightX, bottomRightY.

    Add a constructor with 2 parameters of type Point: topLeft, bottomRight.

    Add a constructor with 1 parameter of type Rectangle.

    Make sure that Rectangle constructors make deep copies.


   Deep Constructor-
    A deep constructor (or deep copy constructor) is a constructor that creates a new object by copying the values of another object, 
    but also creates new copies of any referenced objects (like other class instances), rather than just copying their references. 
    This ensures that changes to the new object's members do not affect the original object's members, and vice versa.

    For example, in the Rectangle class,
    if you have a copy constructor that takes another Rectangle as a parameter, 
    a deep copy would mean creating new Point objects for topLeft and bottomRight, 
    copying their values, instead of just copying the references to the existing Point objects.

    Copy Constructor-
    A copy constructor is a special type of constructor in object-oriented programming (especially in C++ and Java) that creates a new object as a copy of an existing object.
    In Java, a copy constructor is a constructor that creates a new object by copying the fields of another object of the same class. 
    It typically takes an object of the same class as a parameter.

    Example for class Point:
